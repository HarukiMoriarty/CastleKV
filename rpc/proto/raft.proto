syntax = "proto3";

package raft;

import "gateway.proto";

service Raft {
  // AppendEntries RPC - used for log replication and heartbeats
  rpc AppendEntries(stream AppendEntriesRequest) returns (stream AppendEntriesResponse) {}
  
  // RequestVote RPC - used during leader elections
  rpc RequestVote(stream RequestVoteRequest) returns (stream RequestVoteResponse) {}
}

// AppendEntries RPC request
message AppendEntriesRequest {
  // leader id is also the sender id
  uint32 leader_id = 1;
  uint64 term = 2;
  uint64 prev_log_index = 3;
  uint64 prev_log_term = 4;
  repeated LogEntry entries = 5;
  uint64 leader_commit = 6;
}

// AppendEntries RPC response
message AppendEntriesResponse {
  uint64 term = 1;
  bool success = 2;
}

// RequestVote RPC request
message RequestVoteRequest {
  uint32 candidate_id = 1;
  uint64 term = 2;
  uint64 last_log_index = 3;
  uint64 last_log_term = 4;
}

// RequestVote RPC response
message RequestVoteResponse {
  uint64 term = 1;
  bool vote_granted = 2;
}

// Log entry structure
message LogEntry {
  uint64 term = 1;
  uint64 index = 2;
  gateway.Command command = 3;
}